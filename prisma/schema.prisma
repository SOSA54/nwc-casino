generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model email_verification {
  user_id    Int       @id
  token      String    @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  users      users     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model game_sessions {
  session_id                               Int       @id @default(autoincrement())
  game_id                                  Int?
  player_one_id                            Int?
  player_two_id                            Int?
  player_one_score                         Int?
  player_two_score                         Int?
  bet_amount                               Int?
  winner_id                                Int?
  session_start                            DateTime? @default(now()) @db.Timestamp(6)
  session_end                              DateTime? @db.Timestamp(6)
  created_at                               DateTime? @default(now()) @db.Timestamp(6)
  games                                    games?    @relation(fields: [game_id], references: [game_id], onDelete: NoAction, onUpdate: NoAction)
  users_game_sessions_player_one_idTousers users?    @relation("game_sessions_player_one_idTousers", fields: [player_one_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  users_game_sessions_player_two_idTousers users?    @relation("game_sessions_player_two_idTousers", fields: [player_two_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  users_game_sessions_winner_idTousers     users?    @relation("game_sessions_winner_idTousers", fields: [winner_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model games {
  game_id       Int             @id @default(autoincrement())
  game_name     String          @db.VarChar(100)
  description   String?
  created_at    DateTime?       @default(now()) @db.Timestamp(6)
  game_sessions game_sessions[]
}

model transactions {
  transaction_id   Int       @id @default(autoincrement())
  user_id          Int?
  amount           Int?
  transaction_type String?   @db.VarChar(50)
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  users            users?    @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  user_id                                          Int                 @id @default(autoincrement())
  username                                         String              @unique @db.VarChar(50)
  email                                            String              @unique @db.VarChar(100)
  password_hash                                    String              @db.VarChar(255)
  balance                                          Int?                @default(0)
  created_at                                       DateTime?           @default(now()) @db.Timestamp(6)
  email_verified                                   Boolean?            @default(false)
  email_verification                               email_verification?
  game_sessions_game_sessions_player_one_idTousers game_sessions[]     @relation("game_sessions_player_one_idTousers")
  game_sessions_game_sessions_player_two_idTousers game_sessions[]     @relation("game_sessions_player_two_idTousers")
  game_sessions_game_sessions_winner_idTousers     game_sessions[]     @relation("game_sessions_winner_idTousers")
  transactions                                     transactions[]
}
